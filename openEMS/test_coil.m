# Переменные -----------------------------------------------------------------#
f0 = 1e6;         # частота, Гц
R = 1;             # Сопротивление порта, Ом
l = 0.1;           # Толщина рамки, м
w = 1;            # Ширина рамки, м
h = 2;             # Высота рамки, м 
d = 1;             # Расстояние между катушками
step = 0.05     # Шаг сетки
E0 = 1000       # Амплитуда возмбуждающего электрического поля
start = -0.1     # Координата начала сосредоточенного порта-источника
stop = 0.1     # Координата конца сосредоточенного порта-источника
# Пространство и сетка ------------------------------------------------------#
FDTD = InitFDTD('NrTS',10000, 'EndCriteria',0,'OverSampling',100);
FDTD = SetBoundaryCond(FDTD,{'MUR' 'MUR' 'MUR' 'MUR' 'MUR' 'MUR'});
CSX = InitCSX();
mesh.x = -(2*d):step:(2*d);
mesh.y = -d:step:d;
mesh.z = -d:step:(2*d);
CSX = DefineRectGrid(CSX, 1, mesh);
# Источник ------------------------------------------------#
FDTD = SetSinusExcite(FDTD, f0);
CSX = AddExcitation(CSX,'excitation',1,[0 E0 0]);
# Порт -----------------------------------------------------#
[CSX  port] = AddLumpedPort(CSX, 1, 1, R, [0 -0.1 0], [0 0.1 0], [0 1 0], true);
[CSX  port] = AddLumpedPort(CSX, 1, 2, R, [d -0.1 0], [d 0.1 0], [0 1 0], true);
# Стороны рамки -----------------------------------------#
CSX = AddMetal(CSX,'frame'); # металл рамки
# Первая рамка -------------------------------------------#
# Левая, граничащая с портом сторона
CSX = AddBox(CSX,'frame',1,[-l/2 start -l/2] ,[l/2 -w/2 l/2]);
# Правая, граничащая с портом сторона
CSX = AddBox(CSX,'frame',1,[-l/2 stop -l/2], [l/2 w/2 l/2]);
# Левая вертикальная сторона
CSX = AddBox(CSX,'frame',1, [-l/2 -w/2 -l/2], [l/2 -((w/2)+l) h]);
# Правая вертикальная сторона
CSX = AddBox(CSX,'frame',1, [-l/2 w/2 -l/2], [l/2 ((w/2)+l) h]);
# Верхняя горизонтальная сторона
CSX = AddBox(CSX,'frame',1, [-l/2 -((w/2)+l) h], [l/2 ((w/2)+l) h + l]);
# Вторая рамка -------------------------------------------#
# Левая, граничащая с портом сторона
CSX = AddBox(CSX,'frame',1,[(-l/2+d) start -l/2] ,[(l/2+d) -w/2 l/2]);
# Правая, граничащая с портом сторона
CSX = AddBox(CSX,'frame',1,[(-l/2+d) stop -l/2], [(l/2+d) w/2 l/2]);
# Левая вертикальная сторона
CSX = AddBox(CSX,'frame',1, [(-l/2+d) -w/2 -l/2], [(l/2+d) -((w/2)+l) h]);
# Правая вертикальная сторона
CSX = AddBox(CSX,'frame',1, [(-l/2+d) w/2 -l/2], [(l/2+d) ((w/2)+l) h]);
# Верхняя горизонтальная сторона
CSX = AddBox(CSX,'frame',1, [(-l/2+d) -((w/2)+l) h], [(l/2+d) ((w/2)+l) h + l]);
# Полеприемник ------------------------------------------#
CSX = AddDump(CSX,'Ht_XY', 'DumpType', 1 );
CSX = AddBox(CSX,'Ht_XY',0,[-2*d -d d],[2*d d d]);
# Запись в файл и запуск openEMS --------------------#
mkdir('tmp');
WriteOpenEMS('/tmp/tmp.xml', FDTD, CSX);
CSXGeomPlot('/tmp/tmp.xml');
RunOpenEMS('tmp','/tmp/tmp.xml','');
